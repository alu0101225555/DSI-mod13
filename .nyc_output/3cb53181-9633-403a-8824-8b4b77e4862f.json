{"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/ejercicio4/LComands.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/ejercicio4/LComands.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":48}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":32}},"4":{"start":{"line":18,"column":8},"end":{"line":28,"column":9}},"5":{"start":{"line":19,"column":12},"end":{"line":24,"column":13}},"6":{"start":{"line":20,"column":16},"end":{"line":20,"column":36}},"7":{"start":{"line":23,"column":16},"end":{"line":23,"column":33}},"8":{"start":{"line":27,"column":12},"end":{"line":27,"column":29}},"9":{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},"10":{"start":{"line":37,"column":12},"end":{"line":37,"column":36}},"11":{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},"12":{"start":{"line":41,"column":12},"end":{"line":41,"column":24}},"13":{"start":{"line":50,"column":21},"end":{"line":50,"column":23}},"14":{"start":{"line":51,"column":8},"end":{"line":72,"column":9}},"15":{"start":{"line":53,"column":27},"end":{"line":53,"column":67}},"16":{"start":{"line":54,"column":16},"end":{"line":54,"column":73}},"17":{"start":{"line":54,"column":48},"end":{"line":54,"column":71}},"18":{"start":{"line":55,"column":16},"end":{"line":57,"column":19}},"19":{"start":{"line":56,"column":20},"end":{"line":56,"column":34}},"20":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"21":{"start":{"line":61,"column":16},"end":{"line":61,"column":61}},"22":{"start":{"line":62,"column":16},"end":{"line":62,"column":22}},"23":{"start":{"line":65,"column":16},"end":{"line":65,"column":46}},"24":{"start":{"line":66,"column":16},"end":{"line":66,"column":22}},"25":{"start":{"line":69,"column":16},"end":{"line":69,"column":45}},"26":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"27":{"start":{"line":73,"column":8},"end":{"line":73,"column":22}},"28":{"start":{"line":81,"column":21},"end":{"line":81,"column":23}},"29":{"start":{"line":82,"column":8},"end":{"line":103,"column":9}},"30":{"start":{"line":84,"column":28},"end":{"line":84,"column":69}},"31":{"start":{"line":85,"column":16},"end":{"line":85,"column":74}},"32":{"start":{"line":85,"column":49},"end":{"line":85,"column":72}},"33":{"start":{"line":86,"column":16},"end":{"line":88,"column":19}},"34":{"start":{"line":87,"column":20},"end":{"line":87,"column":34}},"35":{"start":{"line":89,"column":16},"end":{"line":89,"column":22}},"36":{"start":{"line":92,"column":16},"end":{"line":92,"column":65}},"37":{"start":{"line":93,"column":16},"end":{"line":93,"column":22}},"38":{"start":{"line":96,"column":16},"end":{"line":96,"column":46}},"39":{"start":{"line":97,"column":16},"end":{"line":97,"column":22}},"40":{"start":{"line":100,"column":16},"end":{"line":100,"column":45}},"41":{"start":{"line":101,"column":16},"end":{"line":101,"column":22}},"42":{"start":{"line":104,"column":8},"end":{"line":104,"column":22}},"43":{"start":{"line":111,"column":8},"end":{"line":123,"column":9}},"44":{"start":{"line":113,"column":16},"end":{"line":113,"column":40}},"45":{"start":{"line":114,"column":16},"end":{"line":114,"column":65}},"46":{"start":{"line":115,"column":16},"end":{"line":115,"column":28}},"47":{"start":{"line":117,"column":16},"end":{"line":117,"column":37}},"48":{"start":{"line":118,"column":16},"end":{"line":118,"column":63}},"49":{"start":{"line":119,"column":16},"end":{"line":119,"column":28}},"50":{"start":{"line":121,"column":16},"end":{"line":121,"column":29}},"51":{"start":{"line":131,"column":8},"end":{"line":139,"column":9}},"52":{"start":{"line":132,"column":24},"end":{"line":132,"column":72}},"53":{"start":{"line":133,"column":12},"end":{"line":135,"column":15}},"54":{"start":{"line":134,"column":16},"end":{"line":134,"column":28}},"55":{"start":{"line":138,"column":12},"end":{"line":138,"column":25}},"56":{"start":{"line":147,"column":8},"end":{"line":155,"column":9}},"57":{"start":{"line":148,"column":24},"end":{"line":148,"column":74}},"58":{"start":{"line":149,"column":12},"end":{"line":151,"column":15}},"59":{"start":{"line":150,"column":16},"end":{"line":150,"column":28}},"60":{"start":{"line":154,"column":12},"end":{"line":154,"column":25}},"61":{"start":{"line":158,"column":0},"end":{"line":158,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":16},"end":{"line":29,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":16},"end":{"line":43,"column":5}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":13},"end":{"line":74,"column":5}},"line":49},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":37},"end":{"line":54,"column":38}},"loc":{"start":{"line":54,"column":48},"end":{"line":54,"column":71}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":38},"end":{"line":55,"column":39}},"loc":{"start":{"line":55,"column":44},"end":{"line":57,"column":17}},"line":55},"6":{"name":"(anonymous_6)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":14},"end":{"line":105,"column":5}},"line":80},"7":{"name":"(anonymous_7)","decl":{"start":{"line":85,"column":38},"end":{"line":85,"column":39}},"loc":{"start":{"line":85,"column":49},"end":{"line":85,"column":72}},"line":85},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":39},"end":{"line":86,"column":40}},"loc":{"start":{"line":86,"column":45},"end":{"line":88,"column":17}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":17},"end":{"line":124,"column":5}},"line":110},"10":{"name":"(anonymous_10)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":23},"end":{"line":140,"column":5}},"line":130},"11":{"name":"(anonymous_11)","decl":{"start":{"line":133,"column":28},"end":{"line":133,"column":29}},"loc":{"start":{"line":133,"column":34},"end":{"line":135,"column":13}},"line":133},"12":{"name":"(anonymous_12)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":25},"end":{"line":156,"column":5}},"line":146},"13":{"name":"(anonymous_13)","decl":{"start":{"line":149,"column":28},"end":{"line":149,"column":29}},"loc":{"start":{"line":149,"column":34},"end":{"line":151,"column":13}},"line":149}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":28,"column":9}},{"start":{"line":18,"column":8},"end":{"line":28,"column":9}}],"line":18},"1":{"loc":{"start":{"line":19,"column":12},"end":{"line":24,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":24,"column":13}},{"start":{"line":19,"column":12},"end":{"line":24,"column":13}}],"line":19},"2":{"loc":{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},{"start":{"line":36,"column":8},"end":{"line":42,"column":9}}],"line":36},"3":{"loc":{"start":{"line":51,"column":8},"end":{"line":72,"column":9}},"type":"switch","locations":[{"start":{"line":52,"column":12},"end":{"line":59,"column":13}},{"start":{"line":60,"column":12},"end":{"line":63,"column":13}},{"start":{"line":64,"column":12},"end":{"line":67,"column":13}},{"start":{"line":68,"column":12},"end":{"line":71,"column":13}}],"line":51},"4":{"loc":{"start":{"line":82,"column":8},"end":{"line":103,"column":9}},"type":"switch","locations":[{"start":{"line":83,"column":12},"end":{"line":90,"column":13}},{"start":{"line":91,"column":12},"end":{"line":94,"column":13}},{"start":{"line":95,"column":12},"end":{"line":98,"column":13}},{"start":{"line":99,"column":12},"end":{"line":102,"column":13}}],"line":82},"5":{"loc":{"start":{"line":111,"column":8},"end":{"line":123,"column":9}},"type":"switch","locations":[{"start":{"line":112,"column":12},"end":{"line":115,"column":28}},{"start":{"line":116,"column":12},"end":{"line":119,"column":28}},{"start":{"line":120,"column":12},"end":{"line":122,"column":13}}],"line":111},"6":{"loc":{"start":{"line":131,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":139,"column":9}},{"start":{"line":131,"column":8},"end":{"line":139,"column":9}}],"line":131},"7":{"loc":{"start":{"line":147,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":155,"column":9}},{"start":{"line":147,"column":8},"end":{"line":155,"column":9}}],"line":147}},"s":{"0":1,"1":1,"2":1,"3":1,"4":9,"5":6,"6":2,"7":4,"8":3,"9":1,"10":0,"11":0,"12":1,"13":2,"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":2,"28":2,"29":2,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":2,"43":2,"44":0,"45":0,"46":0,"47":1,"48":1,"49":1,"50":1,"51":2,"52":0,"53":0,"54":0,"55":2,"56":2,"57":1,"58":1,"59":1,"60":1,"61":1},"f":{"0":1,"1":9,"2":1,"3":2,"4":0,"5":0,"6":2,"7":0,"8":0,"9":2,"10":2,"11":0,"12":2,"13":1},"b":{"0":[6,3],"1":[2,4],"2":[0,1],"3":[0,1,1,0],"4":[0,1,1,0],"5":[0,1,1],"6":[0,2],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/ejercicio4/LComands.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/ejercicio4/LComands.ts"],"names":[],"mappings":"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","sourcesContent":["import {spawn} from 'child_process';\nimport { cp } from 'fs';\n/**\n * Clase LComands: implementa los comandos \n */\nexport class LComands {\n    private fs = require('fs');\n\n    /**\n     * Función 'check': comprueba si es un fichero o un directorio\n     * @param ruta nombre de la ruta para analizar \n     * @returns nombre de la categoría a la que pertenece (directorio, fichero ó undefined)\n     */\n    public check(ruta: string): string | undefined {\n        if(this.fs.existsSync(ruta)) {\n            if(this.fs.lstatSync(ruta).isDirectory()) {\n                return \"directorio\";\n            }else {\n                return \"fichero\";\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Función 'mkdir': crea un directorio nuevo\n     * @param ruta ruta donde crear el nuevo directorio\n     * @returns true ó false\n     */\n    public mkdir(ruta: string) {\n        if(this.fs.existsSync(ruta)) {\n            this.fs.mkdirSync(ruta);\n            return false;\n        }else {\n            return true;\n        }\n    }\n\n    /**\n     * Función 'ls': muestra el contenido de un directorio\n     * @param ruta ruta de la que desea mostrar el contenido\n     * @returns \n     */\n    public ls(ruta: string) {\n        let result = \"\";\n        switch (this.check(ruta)) {\n            case \"directorio\": {\n                const ls = spawn('ls', [ruta]);\n                ls.stdout.on('data', (piece) => result = result + piece);\n                ls.stdout.on('close', () => {\n                    return result;\n                });\n                break;\n            }\n            case \"fichero\": {\n                result = \"Imposible hacer ls sobre fichero.\";\n                break;\n            }\n            case undefined: {\n                result = \"No existe la ruta.\";\n                break;\n            }\n            default: {\n                result = \"ERROR imprevisto.\";\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Función 'cat': muestra el contenido de un fichero\n     * @param ruta ruta de la que se desea mostrar el contenido\n     * @returns \n     */\n    public cat(ruta: string) {\n        let result = \"\";\n        switch (this.check(ruta)) {\n            case \"fichero\": {\n                const cat = spawn('cat', [ruta]);\n                cat.stdout.on('data', (piece) => result = result + piece);\n                cat.stdout.on('close', () => {\n                return result;\n                });\n                break;\n            }\n            case \"directorio\": {\n                result = \"Imposible hacer cat sobre directorio.\";\n                break;\n            }\n            case undefined: {\n                result = \"No existe la ruta.\";\n                break;\n            }\n            default: {\n                result = \"ERROR imprevisto.\";\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Función 'remove': elimina un fichero o directorio\n     * @param ruta ruta del fichero o directorio a eliminar\n     */\n    public remove(ruta: string) {\n        switch (this.check(ruta)) {\n            case \"directorio\":\n                this.fs.rmdirSync(ruta);\n                console.log(`Direcorio eliminado correctamente`);\n                return true;\n            case \"fichero\":\n                this.fs.rmSync(ruta);\n                console.log(`Fichero eliminado correctamente`);\n                return true;\n            default: {\n                return false;\n            }\n        }\n    }\n\n    /**\n     * Función 'move': mueve el fichero o directorio\n     * @param rutaO ruta origen\n     * @param rutaD ruta destino\n     */\n    public move(rutaO: string, rutaD: string) {\n        if(this.fs.existsSync(rutaO)) {\n            const mov = spawn('mv', [rutaO, rutaD]);\n            mov.on('close', () => {\n                return true;\n            });\n        }else {\n            return false;\n        }\n    }\n\n    /**\n     * Función 'copy': copia un fichero o directorio\n     * @param rutaOr ruta origen\n     * @param rutaDe ruta destino\n     */\n    public copy(rutaOr: string, rutaDe: string) {\n        if(this.fs.existsSync(rutaOr)) {\n            const cop = spawn('cp', [rutaOr, rutaDe]);\n            cop.on('close', () => {\n                return true;\n            });\n        }else {\n            return false;\n        }\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0660d0efab1d5502b07421127e12aa65ed7f4a4b","contentHash":"3e3b4c1b67185e5a28831fbcd5b2f7fe2262f0da0462c5f8f3b8cc08b9c58197"},"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/mod10/suma.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/mod10/suma.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":27}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":20}}},"fnMap":{"0":{"name":"suma","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":13}},"loc":{"start":{"line":10,"column":30},"end":{"line":12,"column":1}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/mod10/suma.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101225555/src/mod10/suma.ts"],"names":[],"mappings":";;;AACA;;;;;GAKG;AACH,SAAgB,IAAI,CAAC,MAAW,EAAE,MAAW;IACzC,OAAO,MAAM,GAAG,MAAM,CAAC;AAC3B,CAAC;AAFD,oBAEC","sourcesContent":["\n/**\n * Función suma\n * @param numUno \n * @param numDos \n * @returns suma de los 2 numeros del archivo\n */\nexport function suma(numUno: any, numDos: any) {\n    return numUno + numDos;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6d59fa3e64937b5fe13c22f214fb8ba9013d1e64","contentHash":"4f240f84d12de51a3ddd1b7e78e8f9d817844b762086b5891363de867bec9095"}}